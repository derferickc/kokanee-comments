{"ast":null,"code":"var _jsxFileName = \"/Users/frederickchoe/Projects/React/web-kokanee-fred-choe/components/CommentListClass.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { subscribe, stopFollow, startFollow, createDupeComment } from '../models/Comment';\nimport { FixedSizeList as List } from \"react-window\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport Comment from \"./Comment\";\n\nclass CommentList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comments: [],\n      follow: true\n    };\n    this.handleFollow = this.handleFollow.bind(this);\n    this.addCustomComment = this.addCustomComment.bind(this);\n    this.handleDupeCheck = this.handleDupeCheck.bind(this);\n    this.loadMore = this.loadMore.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      comments: this.props.initialComments\n    });\n  }\n\n  componentDidUpdate() {\n    subscribe(comment => {\n      const dupeCheck = this.handleDupeCheck(comment);\n\n      if (dupeCheck === -1) {\n        this.setState({\n          comments: [...this.state.comments, comment]\n        });\n      }\n\n      console.log('received comment: ', comment);\n    });\n  }\n\n  handleFollow() {\n    if (this.state.follow) {\n      stopFollow();\n    } else {\n      startFollow();\n    }\n\n    this.setState({\n      follow: !this.state.follow\n    });\n  }\n\n  addCustomComment() {\n    const comment = createDupeComment();\n    const dupeCheck = this.handleDupeCheck(comment);\n\n    if (dupeCheck === -1) {\n      this.setState({\n        comments: [...this.state.comments, comment]\n      });\n    }\n  }\n\n  handleDupeCheck(val) {\n    const indexOfComment = this.state.comments.findIndex(comment => comment.author === val.author && comment.message === val.message);\n    return indexOfComment;\n  }\n\n  loadMore() {// some code in future\n  }\n\n  render() {\n    const {\n      comments,\n      follow\n    } = this.state;\n    return __jsx(\"div\", {\n      className: \"commentlist-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"follow-button-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, follow == true ? __jsx(\"button\", {\n      onClick: this.handleFollow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Unfollow\") : __jsx(\"button\", {\n      onClick: this.handleFollow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Follow\")), __jsx(\"div\", {\n      className: \"addcustom-comment-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      onClick: this.addCustomComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Add Custom Comment\")), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Comments List Length: \", comments.length), __jsx(\"div\", {\n      className: \"commentlist-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, comments.map(comment => __jsx(Comment, {\n      comment: comment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default CommentList;","map":{"version":3,"sources":["/Users/frederickchoe/Projects/React/web-kokanee-fred-choe/components/CommentListClass.js"],"names":["React","Component","subscribe","stopFollow","startFollow","createDupeComment","FixedSizeList","List","AutoSizer","Comment","CommentList","constructor","props","state","comments","follow","handleFollow","bind","addCustomComment","handleDupeCheck","loadMore","componentDidMount","setState","initialComments","componentDidUpdate","comment","dupeCheck","console","log","val","indexOfComment","findIndex","author","message","render","length","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { subscribe, stopFollow, startFollow, createDupeComment } from '../models/Comment'\nimport { FixedSizeList as List } from \"react-window\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport Comment from \"./Comment\"\n\nclass CommentList extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      comments: [],\n      follow: true\n    }\n\n    this.handleFollow = this.handleFollow.bind(this)\n    this.addCustomComment = this.addCustomComment.bind(this)\n    this.handleDupeCheck = this.handleDupeCheck.bind(this)\n    this.loadMore = this.loadMore.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      comments: this.props.initialComments\n    })\n  }\n\n  componentDidUpdate() {\n    subscribe(comment => {\n      const dupeCheck = this.handleDupeCheck(comment)\n      if(dupeCheck === -1) {\n        this.setState({\n          comments: [...this.state.comments, comment]\n        })\n      }\n      console.log('received comment: ', comment)\n    })\n  }\n\n  handleFollow() {\n    if(this.state.follow) {\n      stopFollow()\n    } else {\n      startFollow()\n    }\n\n    this.setState({\n      follow: !this.state.follow\n    })\n  }\n\n  addCustomComment() {\n    const comment = createDupeComment()\n    const dupeCheck = this.handleDupeCheck(comment)\n\n    if(dupeCheck === -1) {\n      this.setState({\n        comments: [...this.state.comments, comment]\n      })\n    }\n  }\n\n  handleDupeCheck(val) {\n    const indexOfComment = this.state.comments.findIndex((comment) => (comment.author === val.author) && (comment.message === val.message))\n\n    return indexOfComment\n  }\n\n  loadMore() {\n    // some code in future\n  }\n\n  render() {\n    const { comments, follow } = this.state\n\n    return (\n      <div className=\"commentlist-container\">\n        <div className=\"follow-button-container\">\n           {follow == true\n            ? <button onClick={this.handleFollow}>Unfollow</button>\n            : <button onClick={this.handleFollow}>Follow</button>\n          }\n        </div>\n\n        <div className=\"addcustom-comment-button\">\n          <button onClick={this.addCustomComment}>Add Custom Comment</button>\n        </div>\n\n        <div>Comments List Length: {comments.length}</div>\n\n        <div className='commentlist-wrapper'>\n          {comments.map((comment) => (\n            <Comment\n              comment={comment}\n            />\n          ))}\n        </div>\n      </div>\n    )\n  }\n}\n \nexport default CommentList"]},"metadata":{},"sourceType":"module"}