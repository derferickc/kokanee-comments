{"ast":null,"code":"var _jsxFileName = \"/Users/frederickchoe/Projects/React/web-kokanee-fred-choe/components/CommentListClass.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { subscribe, stopFollow, startFollow, createDupeComment } from '../models/Comment';\nimport Comment from \"./Comment\";\nimport { FixedSizeList as List } from 'react-window';\nimport AutoSizer from \"react-virtualized-auto-sizer\";\n\nclass CommentList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comments: [],\n      follow: true\n    };\n    this.handleFollow = this.handleFollow.bind(this);\n    this.addCustomComment = this.addCustomComment.bind(this);\n    this.handleDupeCheck = this.handleDupeCheck.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      comments: this.props.initialComments\n    });\n  }\n\n  componentDidUpdate() {\n    subscribe(comment => {\n      this.setState({\n        comments: [...this.state.comments, comment]\n      });\n      console.log('received comment: ', comment);\n    });\n  }\n\n  handleFollow() {\n    if (this.state.follow) {\n      stopFollow();\n    } else {\n      startFollow();\n    }\n\n    this.setState({\n      follow: !this.state.follow\n    });\n  }\n\n  addCustomComment() {\n    const comment = createDupeComment();\n    this.setState({\n      comments: [...this.state.comments, comment]\n    });\n  }\n\n  handleDupeCheck(val) {\n    const indexOfComment = this.state.comments.findIndex(comment => comment.author === val.author && comment.message === val.message);\n    return indexOfComment;\n  }\n\n  render() {\n    const {\n      comments,\n      follow\n    } = this.state;\n\n    const commentReactWindow = ({\n      style\n    }) => __jsx(\"div\", {\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, comments.map((comment, index) => __jsx(Comment, {\n      comment: comment,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })));\n\n    return __jsx(\"div\", {\n      className: \"comment-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      onClick: this.handleFollow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, follow == true ? `Unfollow` : `Follow`)), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      onClick: this.addCustomComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Add Custom Comment\")), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Comments array length: \", comments.length), __jsx(AutoSizer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, ({\n      height,\n      width\n    }) => __jsx(List, {\n      height: 400,\n      width: width,\n      itemCount: 1,\n      itemSize: 50,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, commentReactWindow)));\n  }\n\n}\n\nexport default CommentList;","map":{"version":3,"sources":["/Users/frederickchoe/Projects/React/web-kokanee-fred-choe/components/CommentListClass.js"],"names":["React","Component","subscribe","stopFollow","startFollow","createDupeComment","Comment","FixedSizeList","List","AutoSizer","CommentList","constructor","props","state","comments","follow","handleFollow","bind","addCustomComment","handleDupeCheck","componentDidMount","setState","initialComments","componentDidUpdate","comment","console","log","val","indexOfComment","findIndex","author","message","render","commentReactWindow","style","map","index","length","height","width"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { subscribe, stopFollow, startFollow, createDupeComment } from '../models/Comment'\nimport Comment from \"./Comment\"\nimport { FixedSizeList as List } from 'react-window';\nimport AutoSizer from \"react-virtualized-auto-sizer\";\n\nclass CommentList extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      comments: [],\n      follow: true\n    }\n\n    this.handleFollow = this.handleFollow.bind(this)\n    this.addCustomComment = this.addCustomComment.bind(this)\n    this.handleDupeCheck = this.handleDupeCheck.bind(this)\n  }\n\n  componentDidMount() {\n    this.setState({\n      comments: this.props.initialComments\n    })\n  }\n\n  componentDidUpdate() {\n    subscribe(comment => {\n      \n        this.setState({\n          comments: [...this.state.comments, comment]\n        })\n      console.log('received comment: ', comment)\n    })\n  }\n\n  handleFollow() {\n    if(this.state.follow) {\n      stopFollow()\n    } else {\n      startFollow()\n    }\n\n    this.setState({\n      follow: !this.state.follow\n    })\n  }\n\n  addCustomComment() {\n    const comment = createDupeComment()\n      this.setState({\n        comments: [...this.state.comments, comment]\n      })\n  }\n\n  handleDupeCheck(val) {\n    const indexOfComment = this.state.comments.findIndex((comment) => (comment.author === val.author) && (comment.message === val.message))\n\n    return indexOfComment\n  }\n\n  render() {\n    const { comments, follow } = this.state\n\n    const commentReactWindow = ({ style }) => (\n      <div style={style}>\n        {comments.map((comment, index) => (\n          <Comment comment={comment} key={index}/>\n        ))}\n      </div>\n    )\n\n    return (\n      <div className='comment-wrapper'>\n        <div>\n          <button onClick={this.handleFollow}>\n            {follow == true\n              ? `Unfollow`\n              : `Follow`}\n          </button>\n        </div>\n\n        <div>\n          <button onClick={this.addCustomComment}>Add Custom Comment</button>\n        </div>\n\n        <div>\n          Comments array length: {comments.length}\n        </div>\n\n        <AutoSizer>\n          {({ height, width }) => (\n            <List\n              height={400}\n              width={width}\n              itemCount={1}\n              itemSize={50}\n            >\n              { commentReactWindow }\n            </List>\n          )}\n        </AutoSizer>\n\n      {/*\n      {comments.map((comment, index) => (\n        <Comment comment={comment} key={index}/>\n      ))}\n      */}\n\n      </div>\n    )\n  }\n}\n \nexport default CommentList"]},"metadata":{},"sourceType":"module"}