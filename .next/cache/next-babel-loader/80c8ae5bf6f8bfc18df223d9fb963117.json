{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/frederickchoe/Projects/React/web-kokanee-fred-choe/components/CommentListClass.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { withStyles } from '@material-ui/core/styles';\nimport { subscribe, stopFollow, startFollow, createDupeComment } from '../models/Comment';\nimport { FixedSizeList as List } from 'react-window';\nimport Button from '@material-ui/core/Button';\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport Comment from \"./Comment\";\n\nvar useStyles = function useStyles(theme) {\n  return {\n    instructions: {\n      textAlign: 'center'\n    },\n    inlineBlock: {\n      display: 'inline-block',\n      textAlign: 'center',\n      width: '100%'\n    },\n    followButton: {\n      display: 'inline-block',\n      marginRight: '5px'\n    },\n    customButton: {\n      display: 'inline-block',\n      marginLeft: '5px'\n    },\n    autoSizerWrapper: {\n      display: 'flex'\n    },\n    autoSizerInner: {\n      flex: '1 1 auto',\n      height: '50vh'\n    }\n  };\n};\n\nvar CommentList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CommentList, _Component);\n\n  function CommentList(props) {\n    var _this;\n\n    _classCallCheck(this, CommentList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CommentList).call(this, props));\n    _this.state = {\n      comments: props.initialComments || [],\n      follow: true\n    };\n    _this.handleFollow = _this.handleFollow.bind(_assertThisInitialized(_this));\n    _this.addCustomComment = _this.addCustomComment.bind(_assertThisInitialized(_this));\n    _this.handleDupeCheck = _this.handleDupeCheck.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CommentList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.subscribeInitiate();\n    }\n  }, {\n    key: \"subscribeInitiate\",\n    value: function subscribeInitiate() {\n      var _this2 = this;\n\n      subscribe(function (comment) {\n        var dupeCheck = _this2.handleDupeCheck(comment);\n\n        if (dupeCheck === -1) {\n          _this2.setState({\n            comments: [].concat(_toConsumableArray(_this2.state.comments), [comment])\n          });\n        }\n\n        console.log('received comment: ', comment);\n      });\n    } // method to handle follow / unfollow clicks\n\n  }, {\n    key: \"handleFollow\",\n    value: function handleFollow() {\n      if (this.state.follow) {\n        stopFollow();\n      } else {\n        startFollow();\n        this.subscribeInitiate();\n      }\n\n      this.setState({\n        follow: !this.state.follow\n      });\n    } // method to add a controlled comment in order to test for dupe handling\n\n  }, {\n    key: \"addCustomComment\",\n    value: function addCustomComment() {\n      var comment = createDupeComment();\n      var dupeCheck = this.handleDupeCheck(comment); // if -1, comment is unique and is added to state\n\n      if (dupeCheck === -1) {\n        this.setState({\n          comments: [].concat(_toConsumableArray(this.state.comments), [comment])\n        });\n      }\n    } // method to check if the current comment already exists in the state (returns index or -1)\n\n  }, {\n    key: \"handleDupeCheck\",\n    value: function handleDupeCheck(val) {\n      var indexOfComment = this.state.comments.findIndex(function (comment) {\n        return comment.author === val.author && comment.message === val.message;\n      });\n      return indexOfComment;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          comments = _this$state.comments,\n          follow = _this$state.follow;\n      var classes = this.props.classes; // Comment component loaded for each index in comments variable\n\n      var commentReactWindow = function commentReactWindow(_ref) {\n        var index = _ref.index,\n            style = _ref.style;\n        return __jsx(\"div\", {\n          style: style,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, __jsx(Comment, {\n          comment: comments[index],\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }));\n      };\n\n      return __jsx(\"div\", {\n        className: \"commentlist-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: classes.inlineBlock,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: classes.followButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, follow == true ? __jsx(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.handleFollow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Unfollow\") : __jsx(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: this.handleFollow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Follow\")), __jsx(\"div\", {\n        className: classes.customButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, __jsx(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.addCustomComment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Add Custom Comment\"))), __jsx(\"div\", {\n        className: classes.instructions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"To 'pause' the incoming stream of comments please click the 'Unfollow' button.\"), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"In order continue receiving glowing reviews and comments, please click the 'Follow' button.\"), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Total Comments: \", comments.length))), __jsx(\"div\", {\n        className: classes.autoSizerWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: classes.autoSizerInner,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, __jsx(AutoSizer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, function (_ref2) {\n        var height = _ref2.height,\n            width = _ref2.width;\n        return __jsx(List, {\n          height: height,\n          width: width,\n          itemSize: 200,\n          itemCount: comments.length,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, commentReactWindow);\n      }))));\n    }\n  }]);\n\n  return CommentList;\n}(Component);\n\nexport default withStyles(useStyles)(CommentList);","map":{"version":3,"sources":["/Users/frederickchoe/Projects/React/web-kokanee-fred-choe/components/CommentListClass.js"],"names":["React","Component","withStyles","subscribe","stopFollow","startFollow","createDupeComment","FixedSizeList","List","Button","AutoSizer","Comment","useStyles","theme","instructions","textAlign","inlineBlock","display","width","followButton","marginRight","customButton","marginLeft","autoSizerWrapper","autoSizerInner","flex","height","CommentList","props","state","comments","initialComments","follow","handleFollow","bind","addCustomComment","handleDupeCheck","subscribeInitiate","comment","dupeCheck","setState","console","log","val","indexOfComment","findIndex","author","message","classes","commentReactWindow","index","style","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { withStyles } from '@material-ui/core/styles';\nimport { subscribe, stopFollow, startFollow, createDupeComment } from '../models/Comment'\nimport { FixedSizeList as List } from 'react-window';\nimport Button from '@material-ui/core/Button';\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport Comment from \"./Comment\"\n\nconst useStyles = theme => ({\n  instructions: {\n    textAlign: 'center'\n  },\n  inlineBlock: {\n    display: 'inline-block',\n    textAlign: 'center',\n    width: '100%'\n  },\n  followButton: {\n    display: 'inline-block',\n    marginRight: '5px'\n  },\n  customButton: {\n    display: 'inline-block',\n    marginLeft: '5px'\n  },\n  autoSizerWrapper: {\n    display: 'flex'\n  },\n  autoSizerInner: {\n    flex: '1 1 auto',\n    height: '50vh'\n  },\n});\n\nclass CommentList extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      comments: props.initialComments || [],\n      follow: true\n    }\n\n    this.handleFollow = this.handleFollow.bind(this)\n    this.addCustomComment = this.addCustomComment.bind(this)\n    this.handleDupeCheck = this.handleDupeCheck.bind(this)\n  }\n\n  componentDidMount() {\n    this.subscribeInitiate()\n  }\n\n  subscribeInitiate() {\n    subscribe(comment => {\n      const dupeCheck = this.handleDupeCheck(comment)\n      if(dupeCheck === -1) {\n        this.setState({\n          comments: [...this.state.comments, comment]\n        })\n      }\n      console.log('received comment: ', comment)\n    })\n  }\n\n  // method to handle follow / unfollow clicks\n  handleFollow() {\n    if(this.state.follow) {\n      stopFollow()\n    } else {\n      startFollow()\n      this.subscribeInitiate()\n    }\n\n    this.setState({\n      follow: !this.state.follow\n    })\n  }\n\n  // method to add a controlled comment in order to test for dupe handling\n  addCustomComment() {\n    const comment = createDupeComment()\n    const dupeCheck = this.handleDupeCheck(comment)\n\n    // if -1, comment is unique and is added to state\n    if(dupeCheck === -1) {\n      this.setState({\n        comments: [...this.state.comments, comment]\n      })\n    }\n  }\n\n  // method to check if the current comment already exists in the state (returns index or -1)\n  handleDupeCheck(val) {\n    const indexOfComment = this.state.comments.findIndex((comment) => (comment.author === val.author) && (comment.message === val.message))\n\n    return indexOfComment\n  }\n\n  render() {\n    const { comments, follow } = this.state\n    const { classes } = this.props;\n\n    // Comment component loaded for each index in comments variable\n    const commentReactWindow = ({ index, style }) => (\n      <div style={style}>\n          <Comment comment={comments[index]} key={index}/>\n      </div>\n    )\n\n    return (\n      <div className=\"commentlist-container\">\n        <div className={classes.inlineBlock}>\n          <div className={classes.followButton}>\n              {follow == true\n                ? <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={this.handleFollow}>\n                    Unfollow</Button>\n                : <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={this.handleFollow}>\n                    Follow</Button>\n              }\n          </div>\n\n          <div className={classes.customButton}>\n            <Button \n              variant=\"contained\"\n              color=\"primary\"\n              onClick={this.addCustomComment}>\n              Add Custom Comment</Button>\n          </div>\n        </div>\n\n        <div className={classes.instructions}>\n          <p>To 'pause' the incoming stream of comments please click the 'Unfollow' button.</p>\n          <p>In order continue receiving glowing reviews and comments, please click the 'Follow' button.</p>\n          <p><strong>Total Comments: {comments.length}</strong></p>\n        </div>\n\n        {/* Viritualization with Autosizing calculations */}\n        <div className={classes.autoSizerWrapper}>\n          <div className={classes.autoSizerInner}>\n            <AutoSizer>\n              {({ height, width }) => (\n                <List\n                  height={height}\n                  width={width}\n                  itemSize={200}\n                  itemCount={comments.length}\n                >\n                  {commentReactWindow}\n                </List>\n              )}\n            </AutoSizer>\n          </div>\n        </div>\n\n      {/*\n      Original mapping of Comment component with props\n      {comments.map((comment, index) => (\n        <Comment comment={comment} key={index}/>\n      ))}\n      */}\n      </div>\n    )\n  }\n}\n \nexport default withStyles(useStyles)(CommentList)"]},"metadata":{},"sourceType":"module"}