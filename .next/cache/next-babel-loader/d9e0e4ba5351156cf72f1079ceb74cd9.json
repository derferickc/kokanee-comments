{"ast":null,"code":"import { loremIpsum } from 'lorem-ipsum';\nimport { name } from './names'; // interface typechecks Comment object has parameters called author/message that have type string, date has type of Date\n\nvar makeComment = function makeComment() {\n  return {\n    author: name(),\n    message: loremIpsum({\n      count: ~~(Math.random() * 3)\n    }),\n    time: new Date()\n  };\n};\n\nexport var makeComments = function makeComments(count) {\n  var comments = [];\n\n  for (var i = 0; i < count; i++) {\n    comments.push(makeComment());\n  }\n\n  return comments;\n};\nexport var subscribe = function subscribe(callback) {\n  // console.log('subscribing')\n  var produce = function produce() {\n    callback(makeComment());\n    var interval = Math.random() * 5000 + 2000; // console.log('next comment in:', interval)\n\n    setTimeout(produce, interval);\n  };\n\n  setTimeout(produce, 3000);\n};","map":{"version":3,"sources":["/Users/frederickchoe/Projects/React/web-kokanee-fred-choe/models/Comment.ts"],"names":["loremIpsum","name","makeComment","author","message","count","Math","random","time","Date","makeComments","comments","i","push","subscribe","callback","produce","interval","setTimeout"],"mappings":"AAAA,SAASA,UAAT,QAA2B,aAA3B;AACA,SAASC,IAAT,QAAqB,SAArB,C,CAEA;;AAOA,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAgB;AAClCC,IAAAA,MAAM,EAAEF,IAAI,EADsB;AAElCG,IAAAA,OAAO,EAAEJ,UAAU,CAAC;AAAEK,MAAAA,KAAK,EAAE,CAAC,EAAEC,IAAI,CAACC,MAAL,KAAgB,CAAlB;AAAV,KAAD,CAFe;AAGlCC,IAAAA,IAAI,EAAE,IAAIC,IAAJ;AAH4B,GAAhB;AAAA,CAApB;;AAMA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACL,KAAD,EAAmB;AAC7C,MAAMM,QAAQ,GAAG,EAAjB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,KAApB,EAA2BO,CAAC,EAA5B,EAAgC;AAC9BD,IAAAA,QAAQ,CAACE,IAAT,CAAcX,WAAW,EAAzB;AACD;;AACD,SAAOS,QAAP;AACD,CANM;AAQP,OAAO,IAAMG,SAAS,GAAG,SAAZA,SAAY,CAACC,QAAD,EAA0C;AACjE;AACA,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpBD,IAAAA,QAAQ,CAACb,WAAW,EAAZ,CAAR;AACA,QAAMe,QAAQ,GAAGX,IAAI,CAACC,MAAL,KAAgB,IAAhB,GAAuB,IAAxC,CAFoB,CAGpB;;AACAW,IAAAA,UAAU,CAACF,OAAD,EAAUC,QAAV,CAAV;AACD,GALD;;AAMAC,EAAAA,UAAU,CAACF,OAAD,EAAU,IAAV,CAAV;AACD,CATM","sourcesContent":["import { loremIpsum } from 'lorem-ipsum'\nimport { name } from './names'\n\n// interface typechecks Comment object has parameters called author/message that have type string, date has type of Date\nexport interface Comment {\n  author: string\n  message: string\n  time: Date\n}\n\nconst makeComment = (): Comment => ({\n  author: name(),\n  message: loremIpsum({ count: ~~(Math.random() * 3) }),\n  time: new Date()\n})\n\nexport const makeComments = (count: number) => {\n  const comments = []\n  for (let i = 0; i < count; i++) {\n    comments.push(makeComment())\n  }\n  return comments\n}\n\nexport const subscribe = (callback: (comment: Comment) => void) => {\n  // console.log('subscribing')\n  const produce = () => {\n    callback(makeComment())\n    const interval = Math.random() * 5000 + 2000\n    // console.log('next comment in:', interval)\n    setTimeout(produce, interval)\n  }\n  setTimeout(produce, 3000)\n}\n"]},"metadata":{},"sourceType":"module"}