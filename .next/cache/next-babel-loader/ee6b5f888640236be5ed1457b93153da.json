{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/frederickchoe/Projects/React/web-kokanee-fred-choe/components/CommentListClass.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { subscribe, stopFollow, startFollow, createDupeComment } from '../models/Comment';\nimport Comment from \"./Comment\";\nimport { FixedSizeList as List } from 'react-window';\nimport AutoSizer from \"react-virtualized-auto-sizer\";\n\nvar CommentList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CommentList, _Component);\n\n  function CommentList(props) {\n    var _this;\n\n    _classCallCheck(this, CommentList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CommentList).call(this, props));\n    _this.state = {\n      comments: [],\n      follow: true\n    };\n    _this.handleFollow = _this.handleFollow.bind(_assertThisInitialized(_this));\n    _this.addCustomComment = _this.addCustomComment.bind(_assertThisInitialized(_this));\n    _this.handleDupeCheck = _this.handleDupeCheck.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CommentList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.scrollTo(0, 0);\n      this.setState({\n        comments: this.props.initialComments\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this2 = this;\n\n      subscribe(function (comment) {\n        var dupeCheck = _this2.handleDupeCheck(comment);\n\n        if (dupeCheck === -1) {\n          _this2.setState({\n            comments: [].concat(_toConsumableArray(_this2.state.comments), [comment])\n          });\n        }\n\n        console.log('received comment: ', comment);\n      });\n    }\n  }, {\n    key: \"handleFollow\",\n    value: function handleFollow() {\n      if (this.state.follow) {\n        stopFollow();\n      } else {\n        startFollow();\n      }\n\n      this.setState({\n        follow: !this.state.follow\n      });\n    }\n  }, {\n    key: \"addCustomComment\",\n    value: function addCustomComment() {\n      var comment = createDupeComment();\n      var dupeCheck = this.handleDupeCheck(comment);\n\n      if (dupeCheck === -1) {\n        this.setState({\n          comments: [].concat(_toConsumableArray(this.state.comments), [comment])\n        });\n      }\n    }\n  }, {\n    key: \"handleDupeCheck\",\n    value: function handleDupeCheck(val) {\n      var indexOfComment = this.state.comments.findIndex(function (comment) {\n        return comment.author === val.author && comment.message === val.message;\n      });\n      return indexOfComment;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          comments = _this$state.comments,\n          follow = _this$state.follow;\n      return __jsx(\"div\", {\n        className: \"comment-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, follow == true ? __jsx(\"button\", {\n        onClick: this.handleFollow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Unfollow\") : __jsx(\"button\", {\n        onClick: this.handleFollow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Follow\")), __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, __jsx(\"button\", {\n        onClick: this.addCustomComment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Add Custom Comment\")), __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Comments array length: \", comments.length), __jsx(AutoSizer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, function (_ref) {\n        var height = _ref.height,\n            width = _ref.width;\n        return __jsx(List, {\n          height: height,\n          width: width,\n          itemSize: 100,\n          itemCount: 10,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, function (_ref2) {\n          var index = _ref2.index,\n              style = _ref2.style;\n          return __jsx(Comment, {\n            style: style,\n            comments: comments[index],\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          });\n        });\n      }));\n    }\n  }]);\n\n  return CommentList;\n}(Component);\n\nexport default CommentList;","map":{"version":3,"sources":["/Users/frederickchoe/Projects/React/web-kokanee-fred-choe/components/CommentListClass.js"],"names":["React","Component","subscribe","stopFollow","startFollow","createDupeComment","Comment","FixedSizeList","List","AutoSizer","CommentList","props","state","comments","follow","handleFollow","bind","addCustomComment","handleDupeCheck","window","scrollTo","setState","initialComments","comment","dupeCheck","console","log","val","indexOfComment","findIndex","author","message","length","height","width","index","style"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { subscribe, stopFollow, startFollow, createDupeComment } from '../models/Comment'\nimport Comment from \"./Comment\"\nimport { FixedSizeList as List } from 'react-window';\nimport AutoSizer from \"react-virtualized-auto-sizer\";\n\nclass CommentList extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      comments: [],\n      follow: true\n    }\n\n    this.handleFollow = this.handleFollow.bind(this)\n    this.addCustomComment = this.addCustomComment.bind(this)\n    this.handleDupeCheck = this.handleDupeCheck.bind(this)\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0)\n    this.setState({\n      comments: this.props.initialComments\n    })\n  }\n\n  componentDidUpdate() {\n    subscribe(comment => {\n      const dupeCheck = this.handleDupeCheck(comment)\n      if(dupeCheck === -1) {\n        this.setState({\n          comments: [...this.state.comments, comment]\n        })\n      }\n      console.log('received comment: ', comment)\n    })\n  }\n\n  handleFollow() {\n    if(this.state.follow) {\n      stopFollow()\n    } else {\n      startFollow()\n    }\n\n    this.setState({\n      follow: !this.state.follow\n    })\n  }\n\n  addCustomComment() {\n    const comment = createDupeComment()\n    const dupeCheck = this.handleDupeCheck(comment)\n\n    if(dupeCheck === -1) {\n      this.setState({\n        comments: [...this.state.comments, comment]\n      })\n    }\n  }\n\n  handleDupeCheck(val) {\n    const indexOfComment = this.state.comments.findIndex((comment) => (comment.author === val.author) && (comment.message === val.message))\n\n    return indexOfComment\n  }\n\n  render() {\n    const { comments, follow } = this.state\n\n    return (\n      <div className='comment-wrapper'>\n        <div>\n           {follow == true\n            ? <button onClick={this.handleFollow}>Unfollow</button>\n            : <button onClick={this.handleFollow}>Follow</button>\n          }\n        </div>\n\n        <div>\n          <button onClick={this.addCustomComment}>Add Custom Comment</button>\n        </div>\n\n        <div>\n          Comments array length: {comments.length}\n        </div>\n\n        <AutoSizer>\n          {({ height, width }) => (\n            <List\n              height={height}\n              width={width}\n              itemSize={100}\n              itemCount={10}\n            >\n              {({ index, style }) =>\n                <Comment style={style} comments={comments[index]} key={index} />}\n            </List>\n          )}\n        </AutoSizer>\n        {/*\n        {comments.map((comment, index) => (\n          <Comment comment={comment} key={index}/>\n        ))}\n        */}\n\n      </div>\n    )\n  }\n}\n \nexport default CommentList"]},"metadata":{},"sourceType":"module"}