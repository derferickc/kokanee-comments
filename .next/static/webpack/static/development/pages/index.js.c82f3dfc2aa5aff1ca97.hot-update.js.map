{"version":3,"file":"static/webpack/static/development/pages/index.js.c82f3dfc2aa5aff1ca97.hot-update.js","sources":["webpack:///./components/CommentListClass.js","webpack:///./pages/index.tsx"],"sourcesContent":["import React, { Component } from \"react\"\nimport { subscribe, stopFollow, startFollow, createDupeComment } from '../models/Comment'\nimport { Theme, Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { FixedSizeList as List } from 'react-window';\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport Comment from \"./Comment\"\n\nclass CommentList extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      comments: [],\n      follow: true\n    }\n\n    this.handleFollow = this.handleFollow.bind(this)\n    this.addCustomComment = this.addCustomComment.bind(this)\n    this.handleDupeCheck = this.handleDupeCheck.bind(this)\n  }\n\n  componentDidMount() {\n    this.setState({\n      comments: this.props.initialComments\n    })\n  }\n\n  componentDidUpdate() {\n    subscribe(comment => {\n      const dupeCheck = this.handleDupeCheck(comment)\n      if(dupeCheck === -1) {\n        this.setState({\n          comments: [...this.state.comments, comment]\n        })\n      }\n      console.log('received comment: ', comment)\n    })\n  }\n\n  // method to handle follow / unfollow clicks\n  handleFollow() {\n    if(this.state.follow) {\n      stopFollow()\n    } else {\n      startFollow()\n    }\n\n    this.setState({\n      follow: !this.state.follow\n    })\n  }\n\n  // method to add a controlled comment in order to test for dupe handling\n  addCustomComment() {\n    const comment = createDupeComment()\n    const dupeCheck = this.handleDupeCheck(comment)\n\n    // if -1, comment is unique and is added to state\n    if(dupeCheck === -1) {\n      this.setState({\n        comments: [...this.state.comments, comment]\n      })\n    }\n  }\n\n  // method to check if the current comment already exists in the state (returns index or -1)\n  handleDupeCheck(val) {\n    const indexOfComment = this.state.comments.findIndex((comment) => (comment.author === val.author) && (comment.message === val.message))\n\n    return indexOfComment\n  }\n\n  render() {\n\n    const classes = useStyles()\n\n    const { comments, follow } = this.state\n\n    // Comment component loaded for each index in comments variable\n    const commentReactWindow = ({ index, style }) => (\n      <div style={style}>\n          <Comment comment={comments[index]} key={index}/>\n      </div>\n    )\n\n    return (\n      <div className=\"commentlist-container\">\n        <div className={\"\"}>\n          <p>To 'pause' the incoming stream of comments please click the 'Unfollow' button.</p>\n          <p>In order continue receiving glowing reviews and comments, please click the 'Follow' button.</p>\n        </div>\n\n        <div className=\"follow-button-container\">\n          <button onClick={this.handleFollow}>\n            {follow == true\n              ? `Unfollow`\n              : `Follow`}\n          </button>\n        </div>\n\n        <div className=\"addcustom-comment-button\">\n          <button onClick={this.addCustomComment}>Add Custom Comment</button>\n        </div>\n\n        <div>Comments List Length: {comments.length}</div>\n\n        <div style={{ display: 'flex' }}>\n          <div style={{ flex: '1 1 auto' , height: '50vh'}}>\n            <AutoSizer>\n              {({ height, width }) => (\n                <List\n                  height={height}\n                  width={width}\n                  itemSize={125}\n                  itemCount={comments.length}\n                >\n                  {commentReactWindow}\n                </List>\n              )}\n            </AutoSizer>\n          </div>\n        </div>\n\n      {/*\n      {comments.map((comment, index) => (\n        <Comment comment={comment} key={index}/>\n      ))}\n      */}\n\n      </div>\n    )\n  }\n}\n \nexport default CommentList","import React from 'react'\nimport { Theme, Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Divider from '@material-ui/core/Divider';\nimport CommentList from '../components/CommentListClass'\nimport Grid from '@material-ui/core/Grid';\n\nimport { makeComments } from '../models/Comment'\nimport Navbar from \"../components/Navbar\"\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return {\n    root: {\n      fontFamily: '\"IBM Plex Sans\", Arial, Helvetica',\n      width: '100%',\n      maxWidth: '100vw',\n      margin: 'auto'\n    },\n    hero: {\n       margin: 'auto',\n       textAlign: 'center'\n    },\n    media: {\n      [theme.breakpoints.down('xs')]: {\n        width: '100%'\n      },\n      [theme.breakpoints.up('sm')]: {\n        width: '50%',\n        margin: 'auto'\n      }\n    },\n    description: {\n      width: '80%',\n      margin: 'auto',\n      textAlign: 'center'\n    },\n  }\n})\n\nconst Home = () => {\n  const classes = useStyles()\n  \n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Navbar />\n        </Grid>\n\n        <Grid item xs={12}>\n          <Typography align=\"center\" gutterBottom variant=\"h4\">\n            Welcome to the Kokanee Exploratory Project!\n          </Typography>\n        </Grid>\n\n        <div className={classes.hero}>\n          <img\n            className={classes.media}\n            alt=\"Kokanee Creek is also known as Depot Creek\"\n            src=\"https://www.waterfallsnorthwest.com/pictures/Depot_Creek_Falls_167.jpg\"\n          />\n        </div>\n\n        <div className={classes.description}>\n          <Typography gutterBottom variant=\"body1\">\n            <p><strong>The project was named after the beautiful creek because its uncanny resemblance to the national treasure. The comments below were left by visitors who were filled with awe; comments are appended and displayed as they are received.</strong></p>\n          </Typography>\n        </div>\n\n        <Divider orientation='horizontal' variant='fullWidth' />\n\n        <Grid item xs={12} sm={10}>\n          <CommentList initialComments={makeComments(10)} />\n        </Grid>\n      </Grid>\n\n      {/*\n      <Typography gutterBottom variant=\"h2\">\n        Kokanee Exploratory Project\n      </Typography>\n      <Typography gutterBottom variant=\"h3\">\n        Welcome Fred Choe!\n      </Typography>\n      <Typography gutterBottom variant=\"body1\">\n        Design a comment list component that automatically appends new messages as they arrive. Allow the user to choose\n        whether or not to automatically “follow” as new messages arrive.\n      </Typography>\n      <Typography variant=\"body1\">\n        Use this provided <a href=\"https://github.com/themaven-net/web-kokanee-fred-choe\">nextjs repo</a> for your\n        work.\n      </Typography>\n      <Typography gutterBottom variant=\"body1\">\n        Please connect with Hank Yates, your Maven Teammate. Please treat this relationship as you would a normal\n        colleague. If you have any questions about the code base, feel free to ask for an orientation. You are also\n        invited, but not obligated, to submit a PR for the work and take feedback from the PR. Your teammate's github\n        username is <code>hankyates-maven</code> and his email is{' '}\n        <code>hank.yates@maven.io</code>\n      </Typography>\n      <Typography gutterBottom variant=\"body1\">\n        Typescript is preferred, but JavaScript is acceptable.\n      </Typography>\n      <Typography gutterBottom variant=\"body1\">\n        You are welcome to design your own UX, if you wish, or we can supply some sample UX.\n      </Typography>\n      <Typography gutterBottom variant=\"body1\">\n        When you are ready to present, reach out to Jimmy and he’ll get a time scheduled for the demo.\n      </Typography>\n      <Typography gutterBottom variant=\"body1\">\n        Good luck!\n      </Typography>\n      <p>\n        Have a look around the project and see if anything is helpful. be sure and take a look at models/Comment.ts and\n        components/CommentList.tsx. (There is also a javascript version of the CommentList component, in\n        components/ComponentListJS.jsx, if you prefer.)\n      </p>\n      <p>\n        If you want to do something like create a new page route, the{' '}\n        <a href=\"https://nextjs.org/docs/basic-features/pages\">nextjs docs</a> are quite useful.{' '}\n      </p>\n\n      <p>\n        Extra credit 1: ensure the CommentList can load a large number (~ 10,000) of comments.\n        Extra credit 2: Ensure there are no duplicate messages in the stream.\n      </p>\n      */}\n    </div>\n  )\n}\n\nexport default Home\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAVA;AAWA;AACA;;;AACA;AACA;AACA;AADA;AAGA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AAEA;AACA;;;AAEA;AAEA;AAFA;AAAA;AAAA;AACA;AAMA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAsBA;;;;AA5HA;AACA;AA8HA;;;;;;;;;;;;;;;;;;;;;;;;;;ACvIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AAEA;AADA;AAIA;AACA;AAFA;AAKA;AACA;AACA;AACA;AAHA;AApuDA;AACA;AACA;;;;A","sourceRoot":""}